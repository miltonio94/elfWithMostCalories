#+title: Readme
#+author: Milton
#+description: The first challenge in Advent of Code 2022

* Problem description
Santa's reindeer typically eat regular reindeer food, but they need a lot of magical energy to deliver presents on Christmas. For that, their favorite snack is a special type of star fruit that only grows deep in the jungle. The Elves have brought you on their annual expedition to the grove where the fruit grows.

To supply enough magical energy, the expedition needs to retrieve a minimum of fifty stars by December 25th. Although the Elves assure you that the grove has plenty of fruit, you decide to grab any fruit you see along the way, just in case.

Collect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!

The jungle must be too overgrown and difficult to navigate in vehicles or access from the air; the Elves' expedition traditionally goes on foot. As your boats approach land, the Elves begin taking inventory of their supplies. One important consideration is food - in particular, the number of Calories each Elf is carrying (your puzzle input).

The Elves take turns writing down the number of Calories contained by the various meals, snacks, rations, etc. that they've brought with them, one item per line. Each Elf separates their own inventory from the previous Elf's inventory (if any) by a blank line.

For example, suppose the Elves finish writing their items' Calories and end up with the following list:

#+begin_src
1000
2000
3000

4000

5000
6000

7000
8000
9000

10000
#+end_src

** First  challenge

This list represents the Calories of the food carried by five Elves:

The first Elf is carrying food with 1000, 2000, and 3000 Calories, a total of 6000 Calories.
The second Elf is carrying one food item with 4000 Calories.
The third Elf is carrying food with 5000 and 6000 Calories, a total of 11000 Calories.
The fourth Elf is carrying food with 7000, 8000, and 9000 Calories, a total of 24000 Calories.
The fifth Elf is carrying one food item with 10000 Calories.
In case the Elves get hungry and need extra snacks, they need to know which Elf to ask: they'd like to know how many Calories are being carried by the Elf carrying the most Calories. In the example above, this is 24000 (carried by the fourth Elf).

Find the Elf carrying the most Calories. How many total Calories is that Elf carrying?

** Second challenge
By the time you calculate the answer to the Elves' question, they've already realized that the Elf carrying the most Calories of food might eventually run out of snacks.

To avoid this unacceptable situation, the Elves would instead like to know the total Calories carried by the top three Elves carrying the most Calories. That way, even if one of those Elves runs out of snacks, they still have two backups.

In the example above, the top three Elves are the fourth Elf (with 24000 Calories), then the third Elf (with 11000 Calories), then the fifth Elf (with 10000 Calories). The sum of the Calories carried by these three elves is 45000.

Find the top three Elves carrying the most Calories. How many Calories are those Elves carrying in total?

* Breaking Down the problem
#+CAPTION: This is the caption for the next figure link (or table)
#+ATTR_HTML: :height 1000px
#+NAME:   fig:SED-HR4049
[[./img/breaking_down_the_problem.png]]

* Experience solving challenges
This was a fun thing to attempt. This is my first time taking part in a AoC challenge and I wasn't sure what to expect. I'm also new to rust having only been learning it for the past three weeks or so, so I wasn't very sure how far I'd get.
I decided to start off by trying to remove as much uncertainty as I could by thinking about the problem from a high level so I decided to only think about the steps that the data needed to go through to get the outcome desired and then sweat about the details later. I decided to to take a visual approach and just draw out the shape of the data in the diagrams above.

Once I felt that I had a direction clear in my mind I went to work. It took a bit of googling around and a lot of trolling the rust docs but I found the methods from the standard library that I needed to get to a solution. I decided to forfit on test along the way due to limited time, as I only have a little bit of time in the evening to tackle these.

I was very surprised at how quickly I got to a working solution. Having some experience in C and C++ and having done a little IO with it hear and there I don't think I would have got a working program this quickly. Rust is really like low level scripting and it's really enjoyable to write.

I wish I had gotten far enough into the resources that I have been going through to have come up with a multi-threaded solution. I would also like to in the future make this a more stable solution that could work on files with erroneous values. Maybe in the coming year I'll dedicate some time to improve on these solutions that I will be attempting in the next few days.

All in all, this was really good to practice some Rust and I'm looking forward to the challenges that are to come.
